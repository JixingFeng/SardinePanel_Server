<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mysecurity.mapper.SarlineTokenDao">

    <resultMap id="BaseResultMap" type="com.example.mysecurity.entity.SarlineToken">
        <!--@Table sarline_token-->
        <result property="id" column="id" jdbcType="VARCHAR"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="token" column="token" jdbcType="VARCHAR"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="BaseResultMap">
        select
          id, name, token
        from sardline.sarline_token
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="BaseResultMap">
        select
          id, name, token
        from sardline.sarline_token
        limit #{offset}, #{limit}
    </select>
    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="BaseResultMap">
        select
          id, name, token
        from sardline.sarline_token
        <where>
            <if test="id != null and id != ''">
                and id = #{id}
            </if>
            <if test="name != null and name != ''">
                and name = #{name}
            </if>
            <if test="token != null and token != ''">
                and token = #{token}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into sardline.sarline_token(id,name, token)
        values (#{id},#{name}, #{token})
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update sardline.sarline_token
        <set>
            <if test="name != null and name != ''">
                name = #{name},
            </if>
            <if test="token != null and token != ''">
                token = #{token},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from sardline.sarline_token where id = #{id}
    </delete>
    <select id="queryByName" resultMap="BaseResultMap">
        select
        id, name, token
        from sardline.sarline_token
        where   name = #{name}

    </select>
</mapper>